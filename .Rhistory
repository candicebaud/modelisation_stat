par(mfrow=c(1,2))
plot(model_without_region, which =c(1,2))
model_without_region <- lm(Dvote ~ year + s1_bis + s2_bis + s3 + s5 + s4+ s6 + r1 + r2 + r3 + r4 + r5 + r6, data = df_usa)
summary(model_without_region)
par(mfrow=c(1,2))
plot(model_without_region, which =c(1,2))
plot(df_usa$state[1:561], resid(model_without_region))
model_without_region <- lm(Dvote ~ year + state + s1_bis + s2_bis + s3 + s5 + s4+ s6 + r1 + r2 + r3 + r4 + r5 + r6, data = df_usa)
summary(model_without_region)
plot(df_usa$state[1:561], resid(model_without_region))
par(mfrow=c(1,2))
plot(model_without_region, which =c(1,2))
library(lme4)
library(lmerTest)
final_model <- lmer(Dvote ~  s1 + s2 + s3 + s4 + n1 + n4 + r3+ r4+ r5+ r6 +(s5|year:region), data = df_usa)
summary(final_model)
coef(final_model) #to have the coefficients of fixed effects
ranef(final_model) #to have the coefficients of random effects
plot(final_model) #too see the residuals
plot(df_usa$state[1:561], resid(final_model))
require("lattice")
qqmath(final_model) #to have the qqplot of the residuals
summary(final_model)
setwd("C:/Users/candi/Desktop/ETUDES/ENSAE2A/semestre 2/options/projet stat")
knitr::opts_chunk$set(echo = TRUE)
df_covid <- read.table('dataset.txt', header=T)
df_covid <- read.csv('sp-fra-jour-cage10-2023-04-06-18h01')
df_covid <- read.csv('sp-fra-jour-cage10-2023-04-06-18h01.csv')
df_covid <- read.csv('sp-fra-jour-cage10-2023-04-06-18h01.csv', header = T, sep =';')
df_covid
View(df_covid)
df_covid <- df_covid %>% mutate(
pop = as.numeric(pop),
P = as.numeric(P),
T = as.numeric(T),
Ti = as.numeric(Ti),
Tp = as.numeric(Tp),
Td = as.numeric(Td),
jour = as.Date(jour , format = "%Y/%m/%d")
)
lapply(c("dplyr","chron","ggplot2","tidyr","questionr","survival","forcats","tidyselect",
"data.table","table1","lubridate", "ggpubr","viridis","finalfit","survminer",
"ggpubr", "ggthemes", "gridExtra", "rstatix","stringr",
"wesanderson","kableExtra", "naniar","boot","scales","ggsci", "stringr",
"Hmisc","DescTools","swimplot", 'stats', 'EnvStats', 'finalfit'),
library, character.only=TRUE)
#lien stable pour l'importation de données
#https://www.data.gouv.fr/fr/datasets/donnees-de-laboratoires-pour-le-depistage-a-compter-du-18-05-2022-si-dep/
#setwd("C:/Users/candi/Desktop/ETUDES/ENSAE2A/semestre 2/options/projet stat")
df_covid <- read.csv('sp-fra-jour-cage10-2023-04-06-18h01.csv', header = T, sep =';')
df_covid <- df_covid %>% mutate(
pop = as.numeric(pop),
P = as.numeric(P),
T = as.numeric(T),
Ti = as.numeric(Ti),
Tp = as.numeric(Tp),
Td = as.numeric(Td),
jour = as.Date(jour , format = "%Y/%m/%d")
)
lapply(c("dplyr","chron","ggplot2","tidyr","questionr","survival","forcats","tidyselect",
"data.table","table1","lubridate", "ggpubr","viridis","finalfit","survminer",
"ggpubr", "ggthemes", "gridExtra", "rstatix","stringr",
"wesanderson","kableExtra", "naniar","boot","scales","ggsci", "stringr",
"Hmisc","DescTools","swimplot", 'stats', 'EnvStats', 'finalfit'),
library, character.only=TRUE)
#lien stable pour l'importation de données
#https://www.data.gouv.fr/fr/datasets/donnees-de-laboratoires-pour-le-depistage-a-compter-du-18-05-2022-si-dep/
#setwd("C:/Users/candi/Desktop/ETUDES/ENSAE2A/semestre 2/options/projet stat")
df_covid <- read.csv('sp-fra-jour-cage10-2023-04-06-18h01.csv', header = T, sep =';')
df_covid <- df_covid %>% mutate(
pop_num = as.numeric(pop),
P_num = as.numeric(P),
Ti_num = as.numeric(Ti),
Tp_num = as.numeric(Tp),
Td_num = as.numeric(Td),
jour = as.Date(jour , format = "%Y-%m-%d")
)
knitr::opts_chunk$set(echo = TRUE)
lapply(c("dplyr","chron","ggplot2","tidyr","questionr","survival","forcats","tidyselect",
"data.table","table1","lubridate", "ggpubr","viridis","finalfit","survminer",
"ggpubr", "ggthemes", "gridExtra", "rstatix","stringr",
"wesanderson","kableExtra", "naniar","boot","scales","ggsci", "stringr",
"Hmisc","DescTools","swimplot", 'stats', 'EnvStats', 'finalfit'),
library, character.only=TRUE)
#lien stable pour l'importation de données
#https://www.data.gouv.fr/fr/datasets/donnees-de-laboratoires-pour-le-depistage-a-compter-du-18-05-2022-si-dep/
#setwd("C:/Users/candi/Desktop/ETUDES/ENSAE2A/semestre 2/options/projet stat")
df_covid <- read.csv('sp-fra-jour-cage10-2023-04-06-18h01.csv', header = T, sep =';')
df_covid <- df_covid %>% mutate(
jour = as.Date(jour , format = "%Y-%m-%d")
)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
plot(df_covid)
plot(df_covid$Ti)
df_covid %>% ggplot(aes(x=jour, y=Ti)) + geom_line()
df_covid %>% ggplot(aes(x=jour, y=Ti, group = cage10)) + geom_line() + scale_continuous
df_covid %>% ggplot(aes(x=jour, y=Ti, group = cage10)) + geom_line()
df_covid %>% group_by(jour, Ti, cage10) %>% ggplot(aes(x=jour, y=Ti, group = cage10)) + geom_line()
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
lapply(c("dplyr","chron","ggplot2","tidyr","questionr","survival","forcats","tidyselect",
"data.table","table1","lubridate", "ggpubr","viridis","finalfit","survminer",
"ggpubr", "ggthemes", "gridExtra", "rstatix","stringr",
"wesanderson","kableExtra", "naniar","boot","scales","ggsci", "stringr",
"Hmisc","DescTools","swimplot", 'stats', 'EnvStats', 'finalfit'),
library, character.only=TRUE)
#lien stable pour l'importation de données
#https://www.data.gouv.fr/fr/datasets/donnees-de-laboratoires-pour-le-depistage-a-compter-du-18-05-2022-si-dep/
#setwd("C:/Users/candi/Desktop/ETUDES/ENSAE2A/semestre 2/options/projet stat")
df_covid <- read.csv('sp-fra-jour-cage10-2023-04-06-18h01.csv', header = T, sep =';')
df_covid <- df_covid %>% mutate(
jour = as.Date(jour , format = "%d/%m/%Y")
)
df_covid %>% group_by(jour, Ti, cage10) %>% ggplot(aes(x=jour, y=Ti, group = cage10)) + geom_line()
df_covid %>% group_by(jour, Ti, cage10) %>% ggplot(aes(x=jour, y=Ti, color = cage10)) + geom_line()
df_covid %>% group_by(jour, cage10, Ti) %>% summarise(number =n())
df_covid %>% group_by(jour, Ti) %>% summarise(number =n())
df_covid %>% group_by(jour, cage10, Ti) %>% summarise(number =n())
df_covid %>% group_by(jour, Ti) %>% summarise(number =n())
df_covid %>% group_by(jour) %>% summarise(number = sum(Ti))
df_covid %>% group_by(jour) %>% summarise(Taux_agrégé = sum(Ti)) %>% ggplot(aes(x=jour, y=Taux_agrégé)) + geom_line()
df_agreg <- df_covid %>% group_by(jour) %>% summarise(Taux_agrégé = sum(Ti))
df_agreg %>% ggplot(aes(x=jour, y=Taux_agrégé)) + geom_line()
df_agreg
test <- as.data.frame(c(0,df_agreg$Taux_agrégé))
test
test %>% rename(col = c(0,df_agreg$Taux_agrégé))
length(df_agreg$Taux_agrégé)
test <- rbind(0,df_agreg$Taux_agrégé)
test
test[,1]
as.data.frame(test)
test <- cbind(0,df_agreg$Taux_agrégé)
test
T_diff <- numeric(length =length(df_agreg$Taux_agrégé))
df_agreg$Taux_agrégé[0]
df_agreg$Taux_agrégé[1]
for (i in 2:length(df_agreg$Taux_agrégé)){
T_diff[i] = df_agreg$Taux_agrégé[i] - df_agreg$Taux_agrégé[i-1]
}
T_diff
for (i in 2:length(df_agreg$Taux_agrégé)){
T_diff[i] = df_agreg$Taux_agrégé[i] - df_agreg$Taux_agrégé[i-1]
diff_log = T_diff[i]/df_agreg$Taux_agrégé[i-1]
}
diff_log
T_diff <- numeric(length =length(df_agreg$Taux_agrégé))
diff_log <- numeric(length =length(df_agreg$Taux_agrégé))
for (i in 2:length(df_agreg$Taux_agrégé)){
T_diff[i] = df_agreg$Taux_agrégé[i] - df_agreg$Taux_agrégé[i-1]
diff_log[i] = T_diff[i]/df_agreg$Taux_agrégé[i-1]
}
diff_log
plot(diff_log)
plot(T_diff)
df_agreg %>% mutate(
T_diff_agreg = T_diff
diff_log_agreg = diff_log
df_agreg %>% mutate(
T_diff_agreg = T_diff
diff_log_agreg = diff_log
df_agreg %>% mutate(
T_diff_agreg = T_diff,
diff_log_agreg = diff_log
)
df_agreg <- df_agreg %>% mutate(
T_diff_agreg = T_diff,
diff_log_agreg = diff_log
)
ggplot(df_agreg, aes(x=jour, y =diff_log_agreg))
ggplot(df_agreg, aes(x=jour, y =diff_log_agreg)) + geom_line()
df_agreg %>% filter(year(jour) == 2020) %>% ggplot( aes(x=jour, y =diff_log_agreg)) + geom_line()
df_agreg %>% filter(year(jour) == 2020 & month(jour) == 1) %>% ggplot( aes(x=jour, y =diff_log_agreg)) + geom_line()
df_agreg %>% filter(year(jour) == 2020 & month(jour) == 01) %>% ggplot( aes(x=jour, y =diff_log_agreg)) + geom_line()
df_agreg %>% filter(year(jour) == 2020 & month(jour) == 10) %>% ggplot( aes(x=jour, y =diff_log_agreg)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour)) summarise(diff_log_agreg_mois = sum(diff_log_agreg))%>% ggplot( aes(x=jour, y =diff_log_agreg_mois)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour)) %>%summarise(diff_log_agreg_mois = sum(diff_log_agreg))%>% ggplot( aes(x=jour, y =diff_log_agreg_mois)) + geom_line()
df_agreg
df_agreg %>% group_by(year(jour), month(jour)) %>%summarise(diff_log_agreg_mois = sum(diff_log_agreg))
df_agreg %>% group_by(year(jour), month(jour)) %>%summarise(diff_log_agreg_mois = sum(diff_log_agreg))%>% ggplot( aes(x=month(jour), y =diff_log_agreg_mois)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour)) %>%summarise(diff_log_agreg_mois = sum(diff_log_agreg))%>% ggplot( aes(x=month(jour), y =diff_log_agreg_mois)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour)) %>%summarise(diff_log_agreg_mois = sum(diff_log_agreg))
df_agreg %>% ggplot(aes(x=jour, y=log(Taux_agrégé))) + geom_line()
df_agreg
weekdays(df_agreg$jour)
df_agreg %>% mutate(
monday = case_when(
weekdays(jour) == 'lundi' ~ 1,
TRUE ~ 0
)
)
df_agreg <- df_agreg %>% mutate(
monday = case_when(
weekdays(jour) == 'lundi' ~ 1,
TRUE ~ 0s
df_agreg <- df_agreg %>% mutate(
monday = case_when(
weekdays(jour) == 'lundi' ~ 1,
TRUE ~ 0
)
)
df_agreg %>% group_by(monday)
df_agreg %>% group_by(jour, monday)
df_agreg %>% group_by(jour) %>% filter(monday == 1) %>%summarise(diff_log_agreg_mois = sum(diff_log_agreg))
df_agreg %>% group_by(jour) %>% filter(monday == 1) %>%summarise(diff_log_agreg_mois = sum(diff_log_agreg))%>%ggplot( aes(x=jour, y =diff_log_agreg_mois)) + geom_line()
df_agreg %>% mutate(
num_monday = cumsum(monday)
)
TRUE ~ 0
)
df_agreg %>% mutate(
num_monday = case_when(
monday == 1 ~ cumsum(monday),
TRUE ~ 0
))
df_agreg<-df_agreg %>% mutate(
num_monday = case_when(
monday == 1 ~ cumsum(monday),
TRUE ~ 0
))
#la série par semaine
df_agreg %>% group_by(jour) %>% summarise()
#la série par semaine
df_agreg %>% group_by(jour, monday) %>% summarise()
#la série par semaine
df_agreg %>% group_by(jour, num-monday) %>% summarise()
#la série par semaine
df_agreg %>% group_by(jour, num_monday) %>% summarise()
#la série par semaine
df_agreg %>% group_by(jour, num_monday, diff_log_agreg) %>% summarise()
#la série par semaine
df_agreg %>% group_by(jour, num_monday, diff_log_agreg) %>% summarise(s = sum(diff_log_agreg))
df_agreg %>% mutate(
week = cumsum(num_monday)
)
df_agreg<-df_agreg %>% mutate(
num_monday = case_when(
monday == 1~ cumsum(monday),
TRUE ~ 0
))
df_agreg %>% mutate(
week = cumsum(num_monday)
)
df_agreg <- df_agreg %>% mutate(
week = cumsum(num_monday)
)
df_agreg %>% group_by(week) %>% mutate(
n_week = num_monday
)
df_agreg %>% group_by(week) %>% mutate(
n_week = week-num_monday
)
TRUE ~ week-num_monday
df_agreg %>% group_by(week) %>% mutate(
n_week = case_when(
monday == 1 ~ num_monday,
TRUE ~ week-num_monday
))
df_agreg %>% mutate(
tuesday = case_when(
weekdays(jour) == 'mardi' ~ 1,
TRUE ~ 0
),
num_tuesday = case_when(
tuesday == 1~ cumsum(tuesday)-1,
TRUE ~ 0)
)
df_agreg %>% mutate(
tuesday = case_when(
weekdays(jour) == 'mardi' ~ 1,
TRUE ~ 0
),
num_tuesday = case_when(
tuesday == 1~ cumsum(tuesday),
TRUE ~ 0)
)
df_agreg <- df_agreg %>% mutate(
tuesday = case_when(
weekdays(jour) == 'mardi' ~ 1,
TRUE ~ 0
),
num_tuesday = case_when(
tuesday == 1~ cumsum(tuesday),
TRUE ~ 0),
wed = case_when(
weekdays(jour) == 'mercredi' ~ 1,
TRUE ~ 0
),
num_wed = case_when(
wed == 1~ cumsum(wed) - 1,
TRUE ~ 0),
thur = case_when(
weekdays(jour) == 'jeudi' ~ 1,
TRUE ~ 0
),
num_thur = case_when(
thur == 1~ cumsum(wed) - 1,
TRUE ~ 0),
fri = case_when(
weekdays(jour) == 'vendredi' ~ 1,
TRUE ~ 0
),
num_fri = case_when(
fri == 1~ cumsum(fri) - 1,
TRUE ~ 0),
sat = case_when(
weekdays(jour) == 'samedi' ~ 1,
TRUE ~ 0
),
num_sat = case_when(
sat == 1~ cumsum(sat) - 1,
TRUE ~ 0),
sun = case_when(
weekdays(jour) == 'dimanche' ~ 1,
TRUE ~ 0
),
num_sun = case_when(
sun == 1~ cumsum(sun) - 1,
TRUE ~ 0),
)
df_agreg <- df_agreg %>% mutate(
tuesday = case_when(
weekdays(jour) == 'mardi' ~ 1,
TRUE ~ 0
),
num_tuesday = case_when(
tuesday == 1~ cumsum(tuesday),
TRUE ~ 0),
wed = case_when(
weekdays(jour) == 'mercredi' ~ 1,
TRUE ~ 0
),
num_wed = case_when(
wed == 1~ cumsum(wed) - 1,
TRUE ~ 0),
thur = case_when(
weekdays(jour) == 'jeudi' ~ 1,
TRUE ~ 0
),
num_thur = case_when(
thur == 1~ cumsum(wed) - 1,
TRUE ~ 0),
fri = case_when(
weekdays(jour) == 'vendredi' ~ 1,
TRUE ~ 0
),
num_fri = case_when(
fri == 1~ cumsum(fri) - 1,
TRUE ~ 0),
sat = case_when(
weekdays(jour) == 'samedi' ~ 1,
TRUE ~ 0
),
num_sat = case_when(
sat == 1~ cumsum(sat) - 1,
TRUE ~ 0),
sun = case_when(
weekdays(jour) == 'dimanche' ~ 1,
TRUE ~ 0
),
num_sun = case_when(
sun == 1~ cumsum(sun) - 1,
TRUE ~ 0),
week = num_monday + num_tuesday + num_wed + num_thur + num_fri + num_sat + num_sun
)
df_agreg
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
lapply(c("dplyr","chron","ggplot2","tidyr","questionr","survival","forcats","tidyselect",
"data.table","table1","lubridate", "ggpubr","viridis","finalfit","survminer",
"ggpubr", "ggthemes", "gridExtra", "rstatix","stringr",
"wesanderson","kableExtra", "naniar","boot","scales","ggsci", "stringr",
"Hmisc","DescTools","swimplot", 'stats', 'EnvStats', 'finalfit'),
library, character.only=TRUE)
#données provenant du site
#https://www.data.gouv.fr/fr/datasets/donnees-de-laboratoires-pour-le-depistage-a-compter-du-18-05-2022-si-dep/#/resources
#utilisation du fichier :sp-fra-jour-cage10-2023-04-06-18h01.csv
#setwd("C:/Users/candi/Desktop/ETUDES/ENSAE2A/semestre 2/options/projet stat")
df_covid <- read.csv('sp-fra-jour-cage10-2023-04-06-18h01.csv', header = T, sep =';')
df_covid <- df_covid %>% mutate(
jour = as.Date(jour , format = "%d/%m/%Y")
)
df_covid %>% group_by(jour, Ti, cage10) %>% ggplot(aes(x=jour, y=Ti, color = cage10)) + geom_line()
df_agreg <- df_covid %>% group_by(jour) %>% summarise(Taux_agrégé = sum(Ti))
df_agreg %>% ggplot(aes(x=jour, y=Taux_agrégé)) + geom_line()
df_agreg %>% ggplot(aes(x=jour, y=log(Taux_agrégé))) + geom_line()
T_diff <- numeric(length =length(df_agreg$Taux_agrégé))
diff_log <- numeric(length =length(df_agreg$Taux_agrégé))
for (i in 2:length(df_agreg$Taux_agrégé)){
T_diff[i] = df_agreg$Taux_agrégé[i] - df_agreg$Taux_agrégé[i-1]
diff_log[i] = T_diff[i]/df_agreg$Taux_agrégé[i-1]
}
df_agreg <- df_agreg %>% mutate(
T_diff_agreg = T_diff,
diff_log_agreg = diff_log
)
df_agreg %>% ggplot( aes(x=jour, y =diff_log_agreg)) + geom_line()
df_agreg %>% filter(year(jour) == 2020 & month(jour) == 10) %>% ggplot( aes(x=jour, y =diff_log_agreg)) + geom_line()
df_agreg
df_agreg <- df_agreg %>% mutate(
monday = case_when(
weekdays(jour) == 'lundi' ~ 1,
TRUE ~ 0
),
num_monday = case_when(
monday == 1~ cumsum(monday),
TRUE ~ 0),
tuesday = case_when(
weekdays(jour) == 'mardi' ~ 1,
TRUE ~ 0
),
num_tuesday = case_when(
tuesday == 1~ cumsum(tuesday),
TRUE ~ 0),
wed = case_when(
weekdays(jour) == 'mercredi' ~ 1,
TRUE ~ 0
),
num_wed = case_when(
wed == 1~ cumsum(wed) - 1,
TRUE ~ 0),
thur = case_when(
weekdays(jour) == 'jeudi' ~ 1,
TRUE ~ 0
),
num_thur = case_when(
thur == 1~ cumsum(wed) - 1,
TRUE ~ 0),
fri = case_when(
weekdays(jour) == 'vendredi' ~ 1,
TRUE ~ 0
),
num_fri = case_when(
fri == 1~ cumsum(fri) - 1,
TRUE ~ 0),
sat = case_when(
weekdays(jour) == 'samedi' ~ 1,
TRUE ~ 0
),
num_sat = case_when(
sat == 1~ cumsum(sat) - 1,
TRUE ~ 0),
sun = case_when(
weekdays(jour) == 'dimanche' ~ 1,
TRUE ~ 0
),
num_sun = case_when(
sun == 1~ cumsum(sun) - 1,
TRUE ~ 0),
week = num_monday + num_tuesday + num_wed + num_thur + num_fri + num_sat + num_sun
)
df_agreg
#la série par semaine
df_agreg %>% group_by(jour, week, diff_log_agreg) %>% summarise(s = sum(diff_log_agreg))
#la série par semaine
df_agreg %>% group_by(jour, week) %>% summarise(s = sum(diff_log_agreg))
#la série par semaine
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg))
#la série par semaine
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg)) %>% ggplot(aes(y=s))
#la série par semaine
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg)) %>% ggplot(aes(y=s)) + geom-line()
#la série par semaine
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg)) %>% ggplot(aes(y=s)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg))
#la série par semaine
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg)) %>% mutate(date = as.Date(week-month(jour)-year(jour), format = "%d-%m-%Y" )) %>% ggplot(aes(y=s)) + geom_line()
#la série par semaine
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg)) %>% mutate(date = as.Date('week-month(jour)-year(jour)', format = "%d-%m-%Y" )) %>% ggplot(aes(y=s)) + geom_line()
#la série par semaine
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg)) %>% mutate(date = as.Date('week-month(jour)-year(jour)', format = "%d-%m-%Y" )) %>% ggplot(aes(x=date,y=s)) + geom_line()
#la série par semaine
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg)) %>% mutate(date = as.Date(week-month(jour)-year(jour), format = "%d-%m-%Y" )) %>% ggplot(aes(x=date,y=s)) + geom_line()
#la série par semaine
df_agreg %>% mutate(
jour_ref = 1
)
#la série par semaine
df_agreg %>% mutate(
jour_ref = 1,
jour = sum(jour)
)
#la série par semaine
df_agreg %>% mutate(
jour_ref = 1,
jour_num = sum(jour_ref)
)
#la série par semaine
df_agreg %>% mutate(
jour_ref = 1,
jour_num = cumsum(jour_ref)
)
#la série par semaine
df_agreg <- df_agreg %>% mutate(
jour_ref = 1,
jour_num = cumsum(jour_ref)
)
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg))
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)%>% ggplot(aes(x=j,y=s)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)%>% ggplot(aes(x=j,y=s)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)%>% filter(jour_num <=100) %>%ggplot(aes(x=j,y=s)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)%>% filter(j <=100) %>%ggplot(aes(x=j,y=s)) + geom_line()
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)%>%ggplot(aes(x=j,y=s)) +
geom_point() + geom_smooth(method = lm)
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)%>%ggplot(aes(x=j,y=s)) +
geom_point() + geom_smooth(method = loess)
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)%>%ggplot(aes(x=j,y=s)) +
geom_line() + geom_smooth(method = loess)
df_agreg %>% group_by(year(jour), month(jour),week) %>% summarise(s = sum(diff_log_agreg), j = jour_num)%>%ggplot(aes(x=j,y=s)) +
geom_line() + geom_smooth(method = lm, formula = y ~ poly(x, 10))
setwd("C:/Users/candi/Desktop/ETUDES/ENSAE2A/semestre 2/options/projet stat")
setwd("C:/Users/candi/Desktop/ETUDES/ENSAE2A/semestre 2/options/projet stat/modelisation_stat")
